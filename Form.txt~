Form chia làm 2 loại là
- controlled form và uncontrollerd form.

I, controlled component
1, controlled component là những form component mà có một value hoặc một checked prop . Trong controlled component giá trị được
render  bên trong element sẽ luôn ánh xạ tới value hoặc prop. mặc định user sẽ không thẻ thay đổi nó.

import React, {Component} from 'react';
import {render} from 'react-dom';

class Search extends Component {
  render() {
    return (
      <div>Search Term: <input type="search" value="React" /></div>
    );
  }
}
React.render(<Search />, document.getElementById('root'));

Giá trị React xuất hiện trong input không thể thay đổi bởi usser

2,  Có thể cho end user khả năng update giá trị controlled component bằng cách bắt sự kiên onChange và thay đổi value state của component

import React, {Component} from 'react';
import {render} from 'react-dom';

class Search extends Component {
  constructor() {
    super();
    this.state = {
      searchTerm: "React"
    };
  }
  handleChange(event) {
    this.setState({searchTerm: event.target.value});
  }
  render() {
    return (
      <div>Search Term: <input type="search" value={this.state.searchTerm}
        onChange={this.handleChange.bind(this)} />
      </div>
    );
  }
}
React.render(<Search />, document.getElementById('root'));

3, Dễ dàng implement interface hoặc validate interaction, ví dụ limit user input 50 ký tự
this.setState({searchTerm: event.target.value.substr(0, 50)});

4, Có một số trường hợp đặc biệt khi tạo controlled component: TextArea,Select
a, TextArea
không thể dùng \n trong giá trị cho textarea, dùng value prop để set giá trị cho textarea
<textarea value="this is a description" />

b, Select
không dùng selected attribute trong option tag để xác định giá trị được chọn mà dùng value prop trên select tag
<select value="B">
  <option value="A">Mobile</option>
  <option value="B">Work</option>
  <option value="C">Home</option>
</select>

=====================================================================================
II, uncontrolled component
1, là các input mà không cung cấp một value prop. Giá trị của rendered element sẽ là giá trị được input bởi người dùng
uncontrolled component không tuân thủ principles của react. nó là một anti-pattern. Điểm mạnh của nó là với những long form
ta muốn user nhập hết các fields sau đó mới xử lý mọi thứ được nhập vào.

import React, {Component} from 'react';
import {render} from 'react-dom';

class UnControlledForm extends Component {
  render() {
    return (
      <form>
        <div className="formGroup">
          Name: <input name="name" type="text" />
        </div>
        <div className="formGroup">
          Email: <input name="email" type="text" />
        </div>
        <button type="submit">Submit</button>
      </form>
    );
  }
}

React.render(<UnControlledForm />, document.getElementById('root'));

Tuy nhiên như trên thì init value của các input sẽ là blank, để set init value cho nó dùng defaultValue prop thay thế value

2, handle
uncontrolled component cũng có khả năng handle dùng onSubmit
